package au.edu.uq.smartass.auxiliary;


import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.*;

/**
 * Tests the functionality of the TexGraph class
 */
public class TexPlotTest {

    /**
     * Tests a basic example
     */
    @Test
    public void testBasicOutput() {
        double x[] = {1, 2, 3, 4, 5};
        double y[] = {1, 2, 1, 2, -1};

        String output = TexPlot.getTex(x, y, 200, 200, 10);

        String expected = "\\begin{center}\n" +
                "\\begin{picture}(200.0,200.0)\n" +
                "\\qbezier(13.333333333333334,128.88888888888889)(35.0,157.77777777777777)(56.66666666666667,186.66666666666669)\n" +
                "\\qbezier(56.66666666666667,186.66666666666669)(78.33333333333334,157.77777777777777)(100.0,128.88888888888889)\n" +
                "\\qbezier(100.0,128.88888888888889)(121.66666666666667,157.77777777777777)(143.33333333333334,186.66666666666669)\n" +
                "\\qbezier(143.33333333333334,186.66666666666669)(165.0,100.00000000000001)(186.66666666666669,13.333333333333334)\n" +
                "\\qbezier(13.333333333333334,71.11111111111111)(100.0,71.11111111111111)(186.66666666666666,71.11111111111111)\n" +
                "\\qbezier(13.333333333333334,71.11111111111111)(13.333333333333334,69.61111111111111)(13.333333333333334,68.11111111111111)\n" +
                "\\qbezier(56.66666666666667,71.11111111111111)(56.66666666666667,69.61111111111111)(56.66666666666667,68.11111111111111)\n" +
                "\\put(56.666668,64.111115){$2.0$}\n" +
                "\\qbezier(100.0,71.11111111111111)(100.0,69.61111111111111)(100.0,68.11111111111111)\n" +
                "\\put(100.0,64.111115){$3.0$}\n" +
                "\\qbezier(143.33333333333334,71.11111111111111)(143.33333333333334,69.61111111111111)(143.33333333333334,68.11111111111111)\n" +
                "\\put(143.33333,64.111115){$4.0$}\n" +
                "\\qbezier(186.66666666666669,71.11111111111111)(186.66666666666669,69.61111111111111)(186.66666666666669,68.11111111111111)\n" +
                "\\put(186.66667,64.111115){$5.0$}\n" +
                "\\qbezier(13.333333333333334,13.333333333333334)(13.333333333333334,100.0)(13.333333333333334,186.66666666666666)\n" +
                "\\qbezier(13.333333333333334,13.333333333333334)(11.833333333333334,13.333333333333334)(10.333333333333334,13.333333333333334)\n" +
                "\\put(7.3333335,13.333333){$-1.0$}\n" +
                "\\qbezier(13.333333333333334,42.22222222222222)(11.833333333333334,42.22222222222222)(10.333333333333334,42.22222222222222)\n" +
                "\\put(7.3333335,42.22222){$-0.5$}\n" +
                "\\qbezier(13.333333333333334,71.11111111111111)(11.833333333333334,71.11111111111111)(10.333333333333334,71.11111111111111)\n" +
                "\\qbezier(13.333333333333334,100.0)(11.833333333333334,100.0)(10.333333333333334,100.0)\n" +
                "\\put(7.3333335,100.0){$0.5$}\n" +
                "\\qbezier(13.333333333333334,128.88888888888889)(11.833333333333334,128.88888888888889)(10.333333333333334,128.88888888888889)\n" +
                "\\put(7.3333335,128.88889){$1.0$}\n" +
                "\\qbezier(13.333333333333334,157.7777777777778)(11.833333333333334,157.7777777777778)(10.333333333333334,157.7777777777778)\n" +
                "\\put(7.3333335,157.77777){$1.5$}\n" +
                "\\qbezier(13.333333333333334,186.66666666666669)(11.833333333333334,186.66666666666669)(10.333333333333334,186.66666666666669)\n" +
                "\\put(7.3333335,186.66667){$2.0$}\n" +
                "\\put(7.3333335,71.111115){$0.0$}\n" +
                "{\\small \\put(-32.5,196.66667){$y$}}\n" +
                "{\\small \\put(-6.6666665,97.0){$y$}}\n" +
                "\\end{picture}\n" +
                "\\end{center}\n" +
                "0";

        assertEquals(output, expected);
    }

    /**
     * Tests a graph with a large number of elements
     */
    @Test
    public void largeTest() {
        String expected = "\\begin{center}\n" +
                "\\begin{picture}(200.0,200.0)\n" +
                "\\qbezier(25.714285714285715,78.33333333333333)(31.904761904761905,89.16666666666666)(38.095238095238095,100.0)\n" +
                "\\qbezier(38.095238095238095,100.0)(44.28571428571429,89.16666666666666)(50.47619047619048,78.33333333333333)\n" +
                "\\qbezier(50.47619047619048,78.33333333333333)(56.66666666666667,89.16666666666666)(62.85714285714286,100.0)\n" +
                "\\qbezier(62.85714285714286,100.0)(69.04761904761905,67.5)(75.23809523809524,35.0)\n" +
                "\\qbezier(75.23809523809524,35.0)(81.42857142857143,100.00000000000001)(87.61904761904762,165.00000000000003)\n" +
                "\\qbezier(87.61904761904762,165.00000000000003)(93.80952380952381,143.33333333333334)(100.0,121.66666666666667)\n" +
                "\\qbezier(100.0,121.66666666666667)(106.19047619047619,154.16666666666669)(112.38095238095238,186.66666666666669)\n" +
                "\\qbezier(112.38095238095238,186.66666666666669)(118.57142857142857,132.5)(124.76190476190476,78.33333333333333)\n" +
                "\\qbezier(124.76190476190476,78.33333333333333)(130.95238095238096,45.83333333333333)(137.14285714285714,13.333333333333334)\n" +
                "\\qbezier(137.14285714285714,13.333333333333334)(143.33333333333334,67.5)(149.52380952380955,121.66666666666667)\n" +
                "\\qbezier(149.52380952380955,121.66666666666667)(155.71428571428572,100.0)(161.90476190476193,78.33333333333333)\n" +
                "\\qbezier(161.90476190476193,78.33333333333333)(168.09523809523813,121.66666666666669)(174.2857142857143,165.00000000000003)\n" +
                "\\qbezier(174.2857142857143,165.00000000000003)(180.47619047619048,121.66666666666669)(186.66666666666669,78.33333333333333)\n" +
                "\\qbezier(13.333333333333334,56.66666666666667)(100.0,56.66666666666667)(186.66666666666666,56.66666666666667)\n" +
                "\\qbezier(13.333333333333334,56.66666666666667)(13.333333333333334,55.16666666666667)(13.333333333333334,53.66666666666667)\n" +
                "\\qbezier(38.095238095238095,56.66666666666667)(38.095238095238095,55.16666666666667)(38.095238095238095,53.66666666666667)\n" +
                "\\put(38.095238,49.666668){$2.0$}\n" +
                "\\qbezier(62.85714285714286,56.66666666666667)(62.85714285714286,55.16666666666667)(62.85714285714286,53.66666666666667)\n" +
                "\\put(62.857143,49.666668){$4.0$}\n" +
                "\\qbezier(87.61904761904762,56.66666666666667)(87.61904761904762,55.16666666666667)(87.61904761904762,53.66666666666667)\n" +
                "\\put(87.61905,49.666668){$6.0$}\n" +
                "\\qbezier(112.38095238095238,56.66666666666667)(112.38095238095238,55.16666666666667)(112.38095238095238,53.66666666666667)\n" +
                "\\put(112.38095,49.666668){$8.0$}\n" +
                "\\qbezier(137.14285714285714,56.66666666666667)(137.14285714285714,55.16666666666667)(137.14285714285714,53.66666666666667)\n" +
                "\\put(137.14285,49.666668){$10.0$}\n" +
                "\\qbezier(161.90476190476193,56.66666666666667)(161.90476190476193,55.16666666666667)(161.90476190476193,53.66666666666667)\n" +
                "\\put(161.90475,49.666668){$12.0$}\n" +
                "\\qbezier(186.66666666666669,56.66666666666667)(186.66666666666669,55.16666666666667)(186.66666666666669,53.66666666666667)\n" +
                "\\put(186.66667,49.666668){$14.0$}\n" +
                "\\qbezier(13.333333333333334,13.333333333333334)(13.333333333333334,100.0)(13.333333333333334,186.66666666666666)\n" +
                "\\qbezier(13.333333333333334,13.333333333333334)(11.833333333333334,13.333333333333334)(10.333333333333334,13.333333333333334)\n" +
                "\\put(7.3333335,13.333333){$-2.0$}\n" +
                "\\qbezier(13.333333333333334,56.66666666666667)(11.833333333333334,56.66666666666667)(10.333333333333334,56.66666666666667)\n" +
                "\\qbezier(13.333333333333334,100.0)(11.833333333333334,100.0)(10.333333333333334,100.0)\n" +
                "\\put(7.3333335,100.0){$2.0$}\n" +
                "\\qbezier(13.333333333333334,143.33333333333334)(11.833333333333334,143.33333333333334)(10.333333333333334,143.33333333333334)\n" +
                "\\put(7.3333335,143.33333){$4.0$}\n" +
                "\\qbezier(13.333333333333334,186.66666666666669)(11.833333333333334,186.66666666666669)(10.333333333333334,186.66666666666669)\n" +
                "\\put(7.3333335,186.66667){$6.0$}\n" +
                "\\put(11.333333,54.666668){$0$}\n" +
                "{\\small \\put(10.833333,196.66667){$y$}}\n" +
                "{\\small \\put(196.66667,53.666668){$x$}}\n" +
                "\\end{picture}\n" +
                "\\end{center}\n" +
                "0";

        double x[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
        double y[] = {1, 2, 1, 2, -1, 5, 3, 6, 1, -2, 3, 1, 5, 1, 2};

        String output = TexPlot.getTex(x, y, 200, 200, 10);

        assertEquals(expected, output);
    }

    @Test
    public void testEmptyGraph() {
        double x[] = {};
        double y[] = {};

        try {
            TexPlot.getTex(x, y, 200, 200, 10);
            fail("The empty graph should have thrown a ArrayIndexOutOfBoundException");
        } catch (ArrayIndexOutOfBoundsException e) {
            // It correctly threw the exception
        }

    }

}
