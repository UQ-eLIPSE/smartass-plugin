//+
//
//
//-

//------------------------------------------------------------------------------

apply plugin: 'java'


sourceCompatibility = 1.8
targetCompatibility = 1.8


task wrapper(type: Wrapper) { gradleVersion = '2.9' }

repositories { mavenCentral() }

dependencies {

	//
	// 	. compile .
	//
        
        // @TODO: make dependency on 'QuestionModule' Interface Library.

	//
	// 	. testCompile . 
	//
	testCompile 'junit:junit:4.12'

	testCompile 'org.json:json:20141113'
	testCompile 'com.hp.hpl.jena:arq:2.8.3'

	//
	// 	. Updates .
	//
	compile 'ch.qos.logback:logback-core:1.1.3'
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.codehaus.groovy:groovy:2.4.4'
}

jar {
	baseName = 'smartass-plugin'
//	version = '0.1.0'
        exclude('au/edu/uq/smartass/engine/**')
        //
        // @TODO: 
        //      * Populate 'META-INF/services/*' with full 'classname(+package)'
        //      * Utility Script currently does this but needs to be called before packaging:
        //      -       src/util/create_services_conf.sh
        //
        eachFile { fileCopyDetails -> 
                if (fileCopyDetails.getName().contains('.class')) { println "* * * : " + fileCopyDetails.getSourcePath(); }
        }
}


allprojects {
	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
		}
	}
}


task printClasspath<< {
        configurations.runtime.each { println it }
}

